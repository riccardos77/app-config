{
  "$schema": "http://json-schema.org/draft-04/schema",
  "id": "http://app-config/values",

  "definitions": {
    "global": {
      "type": "object",
      "properties": {
        "repository": { "type": "string" }
      },
      "additionalProperties": true
    },
    "fullnameOverride": {
      "type": "string",
      "description": "Objects base name"
    },
    "goto": {
      "type": "object",
      "properties": {
        "apcode": {
          "type": "string",
          "pattern": "[a-z_]",
          "description": "utilizzare solo caratteri minuscoli e underscore"
        },
        "apname": { "type": "string" },
        "pkcode": {
          "type": "string",
          "pattern": "[a-z_]",
          "description": "utilizzare solo caratteri minuscoli e underscore"
        },
        "pkname": { "type": "string" }
      }
    },
    "configMapRef": {
      "type": "object",
      "properties": {
        "volumeName": { "type": "string", "description": "Volume name" },
        "objectName": {
          "type": "string",
          "description": "ConfigMap Kubernetes resource name"
        },
        "mountPath": { "type": "string" },
        "readOnly": { "type": "boolean" }
      },
      "additionalProperties": false
    },
    "configMapRefs": {
      "type": "array",
      "description": "Config map references",
      "items": { "$ref": "#/definitions/configMapRef" }
    },
    "image": {
      "description": "Docker Image related settings",
      "properties": {
        "imageName": {
          "type": "string",
          "description": "Docker Image name. Tag must be specified in tag attribute"
        },
        "tag": {
          "type": "string",
          "description": "Overrides the image tag whose default is the chart appVersion."
        },
        "repository": {
          "type": "string",
          "description": "path to repository where image must be retrieved. Must end with /"
        },
        "pullPolicy": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/imagePullPolicy"
        },
        "imagePullSecrets": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/imagePullSecrets"
        }
      },
      "additionalProperties": false
    },
    "envFrom": {
      "type": "object",
      "description": "Defines a key value map that will be stored as configmap and referenced by pod.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "envFromSecret": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Environment variable name"
          },
          "secret": {
            "type": "string",
            "description": "Name of referenced Secret object inside the same namespace"
          },
          "key": {
            "type": "string",
            "description": "Secret item key"
          }
        }
      }
    },
    "service": {
      "description": "Service related settings",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "enable service template"
        },
        "type": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.ServiceSpec/properties/type",
          "enum": ["ExternalName", "ClusterIP", "NodePort", "LoadBalancer"]
        },
        "port": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.ServicePort"
        },
        "containerPort": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.ContainerPort/properties/containerPort"
        }
      },
      "additionalProperties": false
    },
    "api": {
      "type": "object",
      "properties": {
        "config": {
          "type": "object",
          "description": "API configuration settings",
          "properties": {
            "autogenerate": {
              "type": "object",
              "description": "Config autogeneration settings",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable configMap resource autogeneration"
                },
                "fileName": {
                  "type": "string",
                  "description": "Key name in autogenerated configMap"
                },
                "objectNameSuffix": {
                  "type": "string",
                  "description": "Kubernetes Config map resource name suffix"
                },
                "configMapRef": {
                  "$ref": "#/definitions/configMapRef",
                  "not": { "required": ["objectName"] }
                }
              },
              "additionalProperties": false
            },
            "data": {
              "type": "object",
              "description": "Config content. Autogenerated config map insert under fileName key.",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "observability": {
      "type": "object",
      "description": "observability related settings",
      "properties": {
        "path": {
          "type": "string",
          "description": "context path to metrics endpoint"
        },
        "port": {
          "type": "number",
          "description": "port to metrics endpoint"
        },
        "datadog": {
          "type": "object",
          "description": "datadog related settings",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "enable datadog agent scraping"
            }
          }
        },
        "prometheus": {
          "type": "object",
          "description": "prometheus related settings",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "enable prometheus agent scraping"
            }
          }
        }
      }
    },
    "dnsPolicy": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/restartPolicy",
      "enum": ["ClusterFirstWithHostNet", "ClusterFirst", "Default", "None"]
    },
    "dnsConfig": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.PodDNSConfig"
    },
    "resources": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements"
    },
    "restartPolicy": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/restartPolicy"
    },
    "replicaCount": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.apps.v1.DeploymentSpec/properties/replicas"
    },
    "podAnnotations": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta/properties/annotations"
    },
    "podSecurityContext": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/securityContext"
    },
    "securityContext": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/securityContext"
    },
    "livenessProbe": {
      "allOf": [
        {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/livenessProbe"
        },
        {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enabled liveness probe"
            }
          }
        }
      ]
    },
    "readinessProbe": {
      "allOf": [
        {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/readinessProbe"
        },
        {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enabled readiness probe"
            }
          }
        }
      ]
    },
    "containerPorts": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/ports"
    },
    "containerLifecycle": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/lifecycle"
    },

    "apiValues": {
      "$ref": "#/definitions/apiValuesWithEnabled",
      "not": { "required": ["enabled"] }
    },
    "apiValuesWithEnabled": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "global": { "$ref": "#/definitions/global" },
        "fullnameOverride": { "$ref": "#/definitions/fullnameOverride" },
        "goto": { "$ref": "#/definitions/goto" },
        "image": { "$ref": "#/definitions/image" },
        "envFrom": { "$ref": "#/definitions/envFrom" },
        "envFromSecret": { "$ref": "#/definitions/envFromSecret" },
        "configMapRefs": { "$ref": "#/definitions/configMapRefs" },
        "service": { "$ref": "#/definitions/service" },
        "api": { "$ref": "#/definitions/api" },
        "observability": { "$ref": "#/definitions/observability" },
        "dnsPolicy": { "$ref": "#/definitions/dnsPolicy" },
        "dnsConfig": { "$ref": "#/definitions/dnsConfig" },
        "resources": { "$ref": "#/definitions/resources" },
        "restartPolicy": { "$ref": "#/definitions/restartPolicy" },
        "replicaCount": { "$ref": "#/definitions/replicaCount" },
        "podAnnotations": { "$ref": "#/definitions/podAnnotations" },
        "podSecurityContext": { "$ref": "#/definitions/podSecurityContext" },
        "securityContext": { "$ref": "#/definitions/securityContext" },
        "livenessProbe": { "$ref": "#/definitions/livenessProbe" },
        "readinessProbe": { "$ref": "#/definitions/readinessProbe" },
        "containerPorts": { "$ref": "#/definitions/containerPorts" },
        "containerLifecycle": { "$ref": "#/definitions/containerLifecycle" },
        "profiles": {
          "type": "object",
          "description": "Per profile settings",
          "additionalProperties": {
            "$ref": "#/definitions/apiValues",
            "not": {
              "anyOf": [
                { "required": ["valuesProfile"] },
                { "required": ["profiles"] }
              ]
            }
          }
        },
        "valuesProfile": {
          "type": "string"
        }
      },
      "additionalProperties": true
    },
    "genericServiceValues": {
      "$ref": "#/definitions/genericServiceValuesWithEnabled",
      "not": { "required": ["enabled"] }
    },
    "genericServiceValuesWithEnabled": {
      "type": "object",
      "properties": {
        "enabled": { "type": "boolean" },
        "global": { "$ref": "#/definitions/global" },
        "fullnameOverride": { "$ref": "#/definitions/fullnameOverride" },
        "goto": { "$ref": "#/definitions/goto" },
        "image": { "$ref": "#/definitions/image" },
        "envFrom": { "$ref": "#/definitions/envFrom" },
        "envFromSecret": { "$ref": "#/definitions/envFromSecret" },
        "configMapRefs": { "$ref": "#/definitions/configMapRefs" },
        "service": { "$ref": "#/definitions/service" },
        "dnsPolicy": { "$ref": "#/definitions/dnsPolicy" },
        "dnsConfig": { "$ref": "#/definitions/dnsConfig" },
        "resources": { "$ref": "#/definitions/resources" },
        "restartPolicy": { "$ref": "#/definitions/restartPolicy" },
        "replicaCount": { "$ref": "#/definitions/replicaCount" },
        "podAnnotations": { "$ref": "#/definitions/podAnnotations" },
        "podSecurityContext": { "$ref": "#/definitions/podSecurityContext" },
        "securityContext": { "$ref": "#/definitions/securityContext" },
        "livenessProbe": { "$ref": "#/definitions/livenessProbe" },
        "readinessProbe": { "$ref": "#/definitions/readinessProbe" },
        "containerPorts": { "$ref": "#/definitions/containerPorts" },
        "containerLifecycle": { "$ref": "#/definitions/containerLifecycle" },
        "profiles": {
          "type": "object",
          "description": "Per profile settings",
          "additionalProperties": {
            "$ref": "#/definitions/genericServiceValues",
            "not": {
              "anyOf": [
                { "required": ["valuesProfile"] },
                { "required": ["profiles"] }
              ]
            }
          }
        },
        "valuesProfile": {
          "type": "string"
        }
      },
      "additionalProperties": true
    },
    "ingressValues": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable ingress resource generation for all booking-bb artifacts"
        },
        "tls": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master/_definitions.json#/definitions/io.k8s.api.networking.v1.IngressTLS"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "description": "name of values tree where retrieve ingress configurations\nname: same as service resource name\nport: from service.port\npath: concatenating api.config.api.version and api.config.api.context"
              },
              "nameOverride": {
                "type": "string",
                "description": "service name override"
              },
              "portOverride": {
                "type": "string",
                "description": "service port override"
              },
              "pathOverride": {
                "type": "string",
                "description": "service path override"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "$ref": "#/definitions/genericServiceValues"
}
