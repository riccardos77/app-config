apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app-config.fullname" . }}
  labels:
    {{- include "app-config.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app-config.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config_env_cm: {{ include (print $.Template.BasePath "/configmap-env-cm.yml") . | sha256sum }}
      labels:
        {{- include "app-config.selectorLabels" . | nindent 8 }}
        date: "{{ now | unixEpoch }}"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      dnsConfig:
        {{- toYaml .Values.dnsConfig | nindent 8 }}
      restartPolicy: {{ .Values.restartPolicy }}
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
               name: {{ include "app-config.fullname" . }}-env-cm
          env:
          {{- range .Values.envFromSecret }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secret }}
                  key: {{ .key }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: health
              containerPort: 2113
              protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
        {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: configdir
            mountPath: {{ .Values.image.mountPath }}
      volumes:
        - name: configdir
          hostPath:
            path: {{ .Values.image.hostPath }}
            type: DirectoryOrCreate
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
      {{- toYaml . | nindent 8 }}
      {{- end }}
